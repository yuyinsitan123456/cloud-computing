---
- name: ensure python is installed
  apt:
    name: python
    update_cache: yes
    state: present
  sudo: yes

- name: if already installed, ensure CouchDB is not running (otherwise, the Erlang processes get in the way)
  service: name=couchdb state=stopped
  ignore_errors: yes

- name: download the source code for Mozilla SpiderMonkey 1.85
  get_url: force=no url=http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz dest=/tmp

- name: unarchive the tar file
  shell: chdir=/tmp tar -xzf js185-1.0.0.tar.gz

- name: ensure zip is installed
  apt:
    name: zip
    update_cache: yes
    state: present
  sudo: yes

- name: install the build-essential
  apt:
    name: build-essential
    update_cache: yes
    state: present
  sudo: yes

- name: compile Mozilla SpiderMonkey 1.8.5
  shell: chdir=/tmp/js-1.8.5/js/src {{ item }}
  with_items:
  - ./configure
  - make --silent
  - make install --silent
  sudo: yes
  
- name: copy the SpiderMonkey header files to a location that CouchDB can read.
  shell: cp -rf /usr/local/include/js /usr/include/js
  sudo: yes

- name: add a ld.so config for the folder /usr/local/lib
  copy: src=usrlocal.conf dest=/etc/ld.so.conf.d/usrlocal.conf
  sudo: yes

- name: run ldconfig
  shell: /sbin/ldconfig
  sudo: yes

- name: Install libicu-dev
  apt:
    name: libicu-dev
    update_cache: yes
    state: present
  sudo: yes

- name: ensure build-essential is installed
  apt:
    name: build-essential
    update_cache: yes
    state: present
  sudo: yes

- name: ensure erlang pkg-config is installed
  apt:
    name: pkg-config
    update_cache: yes
    state: present
  sudo: yes

- name: Add Erlang repository key
  apt_key: url=http://packages.erlang-solutions.com/debian/erlang_solutions.asc state=present
  sudo: yes

- name: Add Erlang repository
  apt_repository: repo="deb http://packages.erlang-solutions.com/debian wheezy contrib" state=present
  sudo: yes

# supplement
- name: Add libwx repository
  apt_repository: repo="deb http://us.archive.ubuntu.com/ubuntu vivid main universe" state=present
  sudo: yes

- name: Update apt cache
  apt: update_cache=yes
  sudo: yes
  
- name: Install erlang-nox
  apt: name=erlang-nox state=present
  sudo: yes
  
- name: Install erlang-dev
  apt: name=erlang-dev state=present 
  sudo: yes 

# supplement
- name: Install libwxbase2.8-0
  apt: name=libwxbase2.8-0 state=present 
  sudo: yes 

# supplement
- name: Install libwxgtk2.8-0
  apt: name=libwxgtk2.8-0 state=present 
  sudo: yes 

# supplement
- name: Install erlang-wx
  apt: name=erlang-wx state=present 
  sudo: yes 

- name: install yum
  apt: name=yum state=latest update-cache=yes force=yes
  sudo: yes
  
- name: Install libmozjs185-1.0
  apt: name=libmozjs185-1.0 state=present  
  sudo: yes
   
- name: Install libmozjs185-dev
  apt: name=libmozjs185-dev state=present  
  sudo: yes
  
- name: Install libcurl4-openssl-dev
  apt: name=libcurl4-openssl-dev state=present  
  sudo: yes
   
- name: Install libicu-dev
  apt: name=libicu-dev state=present  
  sudo: yes

# supplement
- name: ensure erlang reltool is installed
  apt:
    name: erlang-reltool
    update_cache: yes
    state: present
    force: yes
  sudo: yes

- name: ensure Python pip is installed
  apt:
    name: python-pip
    update_cache: yes
    state: present
  sudo: yes

- name: ensure sphinx is installed
  shell: pip install sphinx
  sudo: yes

- name: download CouchDB 2.0
  get_url: url=http://www-eu.apache.org/dist/couchdb/source/2.0.0/apache-couchdb-2.0.0.tar.gz  dest=/tmp/

- name: unarchive the .tar.gz file
  shell: tar -xvzf apache-couchdb-2.0.0.tar.gz chdir=/tmp
  tags: unarchive

- name: execute configure
  shell: ./configure chdir=/tmp/apache-couchdb-2.0.0
  tags: configure
  async: 1800

- name: ensure epmd is not running
  shell: pkill epmd
  ignore_errors: yes

- name: execute make
  shell: chdir=/tmp/apache-couchdb-2.0.0 {{ item }}
  with_items:
  - make clean
  - make
  - make release
  tags: make
  
- name: copy the rel/couchdb folder to /usr/local/lib/
  shell: cp -r /tmp/apache-couchdb-2.0.0/rel/couchdb /usr/local/lib

- name: apply the single node configuration
  copy: src=single_node.local.ini dest=/usr/local/lib/couchdb/etc/local.ini
  when: configure_cluster == False

- name: apply the cluster configuration
  copy: src=cluster.local.ini dest=/usr/local/lib/couchdb/etc/local.ini
  when: configure_cluster == True

- name: change the vm.args file
  template: src=vm.args.j2 dest=/usr/local/lib/couchdb/etc/vm.args

- name: install the sysv script to run CouchDB as a service
  copy: src=couchdb dest=/etc/init.d/couchdb mode=0755

- name: start CouchDB and ensure it is enabled at boot time
  service: name=couchdb state=started enabled=yes

- name: ensure Python httplib2 is installed
  apt:
    name: python-httplib2
    update_cache: yes
    state: present
  sudo: yes

- name: check that we can ping CouchDB on all its ports
  uri: url=http://127.0.0.1:{{ item }}
  with_items:
  - 5986
  - 5984

- include: configure-cluster.yaml
  when: configure_cluster
  tags: configure_cluster
